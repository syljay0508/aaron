<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：foundation | 马栈]]></title>
  <link href="http://syljay0508.github.io/aaron/blog/categories/foundation/atom.xml" rel="self"/>
  <link href="http://syljay0508.github.io/aaron/"/>
  <updated>2014-11-04T22:29:54+08:00</updated>
  <id>http://syljay0508.github.io/aaron/</id>
  <author>
    <name><![CDATA[Aaron]]></name>
    <email><![CDATA[syljay0508@hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[内购]]></title>
    <link href="http://syljay0508.github.io/aaron/blog/nei-gou/"/>
    <updated>2014-11-04T22:19:31+08:00</updated>
    <id>http://syljay0508.github.io/aaron/blog/nei-gou</id>
    <content type="html"><![CDATA[<h3 id="section">前面的话</h3>
<p>去年做过一个项目的需求其中之一就是解锁所有功能的内购, 于是又是看官方文档又是查博客, 终于总结出来一套内购的详细过程, 分享给新手们.</p>

<h1 id="section-1">内购</h1>
<p>指通过苹果商店购买App内的虚拟物品</p>

<h4 id="section-2">代码</h4>

<p>本教程只讲代码的实现过程, 具体在iTunes Connect的设置另写</p>

<ul>
  <li>添加框架<code>StoreKit.framework</code></li>
  <li>添加头文件</li>
</ul>

<p><code>objc		
#import &lt;StoreKit/StoreKit.h&gt;
</code></p>

<ul>
  <li>
    <p>声明内购产品ID宏
<code>objc		
#define kSYLTest.testApp.testProduct @"com.syltest.testApp.testProduct"
</code></p>
  </li>
  <li>
    <p>声明一个数组, 用来接收内购产品清单
<code>objc	
@property (nonatomic, strong) NSArray *validProducts;
</code></p>
  </li>
  <li>
    <p>购买前, 先通过产品ID请求产品信息, 需要遵守协议<code>SKProductsRequestDelegate</code>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="c1">//根据产品ID实例化一个集合</span>
</span><span class='line'>  <span class="bp">NSSet</span> <span class="o">*</span><span class="n">productIdentifiers</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSSet</span> <span class="nl">setWithObjects</span><span class="p">:</span><span class="n">kTutorialPointProductID</span><span class="p">,</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//根据这个集合实例化内购产品信息请求</span>
</span><span class='line'>  <span class="bp">SKProductsRequest</span> <span class="o">*</span><span class="n">productsRequest</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">SKProductsRequest</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithProductIdentifiers</span><span class="p">:</span><span class="n">productIdentifiers</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//设置代理</span>
</span><span class='line'> 	<span class="n">productsRequest</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'> 	<span class="c1">//异步请求</span>
</span><span class='line'> 	<span class="p">[</span><span class="n">productsRequest</span> <span class="n">start</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">……</span>
</span><span class='line'>  <span class="c1">//协议方法</span>
</span><span class='line'>  <span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">productsRequest</span><span class="p">:(</span><span class="bp">SKProductsRequest</span> <span class="o">*</span><span class="p">)</span><span class="n">request</span> <span class="nl">didReceiveResponse</span><span class="p">:(</span><span class="bp">SKProductsResponse</span> <span class="o">*</span><span class="p">)</span><span class="n">response</span><span class="p">{</span>
</span><span class='line'>      <span class="bp">SKProduct</span> <span class="o">*</span><span class="n">validProduct</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//response.products是返回相关产品的数组</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="p">[</span><span class="n">response</span><span class="p">.</span><span class="n">products</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'>      <span class="c1">//数组元素个数大于0表示有产品, 否则没有产品</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">count</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">validProducts</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">products</span><span class="p">;</span>
</span><span class='line'>          <span class="n">validProduct</span> <span class="o">=</span> <span class="p">[</span><span class="n">response</span><span class="p">.</span><span class="n">products</span> <span class="nl">objectAtIndex</span><span class="p">:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>          <span class="c1">//通过产品ID判断对应产品</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">([</span><span class="n">validProduct</span><span class="p">.</span><span class="n">productIdentifier</span>
</span><span class='line'>             <span class="nl">isEqualToString</span><span class="p">:</span><span class="n">kTutorialPointProductID</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>             <span class="c1">//产品信息</span>
</span><span class='line'>             <span class="n">NSLog</span><span class="p">(</span><span class="err">“产品名称</span><span class="o">:%</span><span class="p">@</span><span class="err">”</span><span class="p">,</span> <span class="n">validProduct</span><span class="p">.</span><span class="n">localizedTitle</span><span class="p">);</span>
</span><span class='line'>             <span class="n">NSLog</span><span class="p">(</span><span class="err">“产品描述</span><span class="o">:%</span><span class="p">@</span><span class="err">”</span><span class="p">,</span> <span class="n">validProduct</span><span class="p">.</span><span class="n">localizedDescription</span><span class="p">);</span>
</span><span class='line'>             <span class="n">NSLog</span><span class="p">(</span><span class="err">“产品名称</span><span class="o">:%</span><span class="p">@</span><span class="err">”</span><span class="p">,</span> <span class="n">validProduct</span><span class="p">.</span><span class="n">price</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">//没有对应产品</span>
</span><span class='line'>          <span class="bp">UIAlertView</span> <span class="o">*</span><span class="n">tmp</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIAlertView</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>                              <span class="nl">initWithTitle</span><span class="p">:@</span><span class="err">”</span><span class="n">Not</span> <span class="n">Available</span><span class="err">”</span>
</span><span class='line'>                              <span class="nl">message</span><span class="p">:@</span><span class="err">”</span><span class="n">No</span> <span class="n">products</span> <span class="n">to</span> <span class="n">purchase</span><span class="err">”</span>
</span><span class='line'>                              <span class="nl">delegate</span><span class="p">:</span><span class="nb">self</span>
</span><span class='line'>                              <span class="nl">cancelButtonTitle</span><span class="p">:</span><span class="nb">nil</span>
</span><span class='line'>                              <span class="nl">otherButtonTitles</span><span class="p">:@</span><span class="err">”</span><span class="n">Ok</span><span class="err">”</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>          <span class="p">[</span><span class="n">tmp</span> <span class="n">show</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>  <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
  </li>
</ul>

<ol>
  <li>
    <p>触发购买事件, 遵守协议:<code>SKPaymentTransactionObserver</code>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="c1">//判断设备能否支持购买</span>
</span><span class='line'> <span class="k">if</span> <span class="p">([</span><span class="bp">SKPaymentQueue</span> <span class="n">canMakePayments</span><span class="p">]</span> <span class="o">==</span> <span class="nb">YES</span><span class="p">){</span>
</span><span class='line'>     <span class="c1">//支持购买</span>
</span><span class='line'>     <span class="c1">//根据购买产品实例化支付对象</span>
</span><span class='line'>      <span class="bp">SKPayment</span> <span class="o">*</span><span class="n">payment</span> <span class="o">=</span> <span class="p">[</span><span class="bp">SKPayment</span> <span class="nl">paymentWithProduct</span><span class="p">:</span><span class="n">validProducts</span><span class="p">[</span><span class="mi">0</span><span class="p">]];</span>
</span><span class='line'>     <span class="c1">//设置交易观察者(代理协议)为当前对象self</span>
</span><span class='line'>    	<span class="p">[[</span><span class="bp">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">addTransactionObserver</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'>    	<span class="c1">//在支付队列中添加支付对象, 并异步请求交易</span>
</span><span class='line'>    	<span class="p">[[</span><span class="bp">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">addPayment</span><span class="p">:</span><span class="n">payment</span><span class="p">];</span>
</span><span class='line'> <span class="p">}</span><span class="k">else</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">NSLog</span><span class="p">(</span><span class="err">“该设备不支持购买”</span><span class="p">)</span>
</span><span class='line'> <span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">……</span>
</span><span class='line'> <span class="c1">//协议方法</span>
</span><span class='line'> <span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">paymentQueue</span><span class="p">:(</span><span class="bp">SKPaymentQueue</span> <span class="o">*</span><span class="p">)</span><span class="n">queue</span> <span class="nl">updatedTransactions</span><span class="p">:(</span><span class="bp">NSArray</span> <span class="o">*</span><span class="p">)</span><span class="n">transactions</span> <span class="p">{</span>
</span><span class='line'> <span class="c1">//遍历返回的交易的数组</span>
</span><span class='line'>     <span class="k">for</span> <span class="p">(</span><span class="bp">SKPaymentTransaction</span> <span class="o">*</span><span class="n">transaction</span> <span class="k">in</span> <span class="n">transactions</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    		<span class="k">switch</span> <span class="p">(</span><span class="n">transaction</span><span class="p">.</span><span class="n">transactionState</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    			<span class="c1">//判断交易结果</span>
</span><span class='line'>             <span class="k">case</span> <span class="nl">SKPaymentTransactionStatePurchasing</span><span class="p">:</span>
</span><span class='line'>                 <span class="n">NSLog</span><span class="p">(@</span><span class="err">”正在交易”</span><span class="p">);</span>
</span><span class='line'>                 <span class="k">break</span><span class="p">;</span>              <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'>             <span class="k">case</span> <span class="nl">SKPaymentTransactionStatePurchased</span><span class="p">:</span>
</span><span class='line'>                 <span class="k">if</span> <span class="p">([</span><span class="n">transaction</span><span class="p">.</span><span class="n">payment</span><span class="p">.</span><span class="n">productIdentifier</span> <span class="nl">isEqualToString</span><span class="p">:</span><span class="n">kTutorialPointProductID</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>                     <span class="n">NSLog</span><span class="p">(</span><span class="err">“交易完成”</span><span class="p">);</span>
</span><span class='line'>                     <span class="c1">//完成交易操作</span>
</span><span class='line'>                     <span class="c1">//code here </span>
</span><span class='line'>                 <span class="p">}</span>
</span><span class='line'>                 <span class="c1">//交易完成后, 在交易队列中清除交易             &lt;br /&gt;</span>
</span><span class='line'>                 <span class="p">[[</span><span class="bp">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">finishTransaction</span><span class="p">:</span><span class="n">transaction</span><span class="p">];</span>
</span><span class='line'>                 <span class="k">break</span><span class="p">;</span>              <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'>             <span class="k">case</span> <span class="nl">SKPaymentTransactionStateRestored</span><span class="p">:</span>
</span><span class='line'>             <span class="c1">//恢复购买             &lt;br /&gt;</span>
</span><span class='line'>                 <span class="n">NSLog</span><span class="p">(@</span><span class="err">”购买以恢复”</span><span class="p">);</span>             <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'>                 <span class="p">[[</span><span class="bp">SKPaymentQueue</span> <span class="n">defaultQueue</span><span class="p">]</span> <span class="nl">finishTransaction</span><span class="p">:</span><span class="n">transaction</span><span class="p">];</span>
</span><span class='line'>                 <span class="k">break</span><span class="p">;</span>              <span class="o">&lt;</span><span class="n">br</span> <span class="o">/&gt;</span>
</span><span class='line'>             <span class="k">case</span> <span class="nl">SKPaymentTransactionStateFailed</span><span class="p">:</span>
</span><span class='line'>                 <span class="n">NSLog</span><span class="p">(@</span><span class="err">”交易失败”</span><span class="p">);</span>
</span><span class='line'>                 <span class="k">break</span><span class="p">;</span>
</span><span class='line'>             <span class="k">default</span><span class="o">:</span>
</span><span class='line'>                 <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>     <span class="p">}</span>
</span><span class='line'> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
  </li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于静态库]]></title>
    <link href="http://syljay0508.github.io/aaron/blog/guan-yu-jing-tai-ku/"/>
    <updated>2014-11-02T22:12:03+08:00</updated>
    <id>http://syljay0508.github.io/aaron/blog/guan-yu-jing-tai-ku</id>
    <content type="html"><![CDATA[<h4 id="section">前面的话:</h4>
<p>在我自学的道路上往往遇到很多根本没有过概念的问题, 比如这篇 Blog 的主题:<code>库</code>, 这篇博文就是介绍库是怎么回事, 希望给我们新手一些帮助.</p>

<h4 id="section-1">一、什么是库？</h4>

<p>库是共享程序代码的方式，一般分为静态库和动态库。</p>

<h4 id="section-2">二、静态库与动态库的区别？</h4>

<p>静态库：链接时完整地拷贝至可执行文件中，被多次使用就有多份冗余拷贝。</p>

<p>动态库：链接时不复制，程序运行时由系统动态加载到内存，供程序调用，系统只加载一次，多个程序共用，节省内存。</p>

<h4 id="ios">三、iOS里静态库形式？</h4>

<p>.a和.framework</p>

<h4 id="ios-1">四、iOS里动态库形式？</h4>

<p>.dylib和.framework</p>

<h4 id="framework">五、framework为什么既是静态库又是动态库？</h4>

<p>系统的.framework是动态库，我们自己建立的.framework是静态库。</p>

<h4 id="aframework">六、a与.framework有什么区别？</h4>

<p>.a是一个纯二进制文件，.framework中除了有二进制文件之外还有资源文件。</p>

<p>.a文件不能直接使用，至少要有.h文件配合，.framework文件可以直接使用。</p>

<p>.a + .h + sourceFile = .framework。</p>

<p>建议用.framework.</p>

<h4 id="section-3">七、为什么要使用静态库？</h4>

<p>方便共享代码，便于合理使用。</p>

<p>实现iOS程序的模块化。可以把固定的业务模块化成静态库。</p>

<p>和别人分享你的代码库，但不想让别人看到你代码的实现。</p>

<p>开发第三方sdk的需要。</p>

<h4 id="section-4">八、制作静态库时的几点注意：</h4>

<ol>
  <li>
    <p>注意理解：无论是.a静态库还.framework静态库，我们需要的都是二进制文件+.h+其它资源文件的形式，不同的是，.a本身就是二进制文件，需要我们自己配上.h和其它文件才能使用，而.framework本身已经包含了.h和其它文件，可以直接使用。</p>
  </li>
  <li>
    <p>图片资源的处理：两种静态库，一般都是把图片文件单独的放在一个.bundle文件中，一般.bundle的名字和.a或.framework的名字相同。.bundle文件很好弄，新建一个文件夹，把它改名为.bundle就可以了，右键，显示包内容可以向其中添加图片资源。</p>
  </li>
  <li>
    <p>category是我们实际开发项目中经常用到的，把category打成静态库是没有问题的，但是在用这个静态库的工程中，调用category中的方法时会有找不到该方法的运行时错误（selector not recognized），解决办法是：在使用静态库的工程中配置other linker flags的值为-ObjC。</p>
  </li>
  <li>
    <p>如果一个静态库很复杂，需要暴露的.h比较多的话，就可以在静态库的内部创建一个.h文件（一般这个.h文件的名字和静态库的名字相同），然后把所有需要暴露出来的.h文件都集中放在这个.h文件中，而那些原本需要暴露的.h都不需要再暴露了，只需要把.h暴露出来就可以了。</p>
  </li>
</ol>
]]></content>
  </entry>
  
</feed>
