<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[马栈]]></title>
  <link href="http://syljay0508.github.io/aaron/atom.xml" rel="self"/>
  <link href="http://syljay0508.github.io/aaron/"/>
  <updated>2014-11-04T22:07:11+08:00</updated>
  <id>http://syljay0508.github.io/aaron/</id>
  <author>
    <name><![CDATA[Aaron]]></name>
    <email><![CDATA[syljay0508@hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用自定义字体]]></title>
    <link href="http://syljay0508.github.io/aaron/blog/shi-yong-zi-ding-yi-zi-ti/"/>
    <updated>2014-11-02T22:03:58+08:00</updated>
    <id>http://syljay0508.github.io/aaron/blog/shi-yong-zi-ding-yi-zi-ti</id>
    <content type="html"><![CDATA[<p>只需在<code>Info.plist</code>文件设置<code>UIAppFonts</code>相关信息即可.</p>

<ol>
  <li>将自定义字体加到你的工程资源文件中</li>
  <li>在 info.plist 文件中增加一名为 UIAppFonts 的key(按下回车系统会改成<code>Fonts provided by application</code>)</li>
  <li>将这个key修改成array</li>
  <li>将你用到的所有字体的名字，作为这个array的值，一项一项填进去（包括扩展名）</li>
  <li>保存 info.plist</li>
</ol>

<p>现在就可以在代码中直接用[UIFont fontWithName:@”CustomFontName” size:12]来取得你自定义的字体了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress常用指令]]></title>
    <link href="http://syljay0508.github.io/aaron/blog/octopresschang-yong-zhi-ling/"/>
    <updated>2014-11-02T19:47:33+08:00</updated>
    <id>http://syljay0508.github.io/aaron/blog/octopresschang-yong-zhi-ling</id>
    <content type="html"><![CDATA[<p>博客已经完成, 记录一下常用到的<code>command</code></p>

<p>在执行任何博客操作的前提是我们进入到这个Octopress目录</p>

<pre><code>cd octopress
</code></pre>

<p>然后就是各种操作了:</p>

<ol>
  <li>
    <p>create一个你的新文章:</p>

    <pre><code> rake new_post["your_title"]
</code></pre>
  </li>
  <li>
    <p>create一个新页面:</p>

    <pre><code> rake new_page[your_title/newpage.html]
</code></pre>

    <p>这样会在your_title文件夹下生成一个newpage.html的文件, 部署后可以这样访问</p>

    <pre><code> http://[your_domain_name]/your-title/newpage.html
</code></pre>
  </li>
  <li>
    <p>setup</p>

    <pre><code> rake generate
</code></pre>

    <p>执行完octopress会根据修改过的内容重新排版和部署, 但这只是在本地.</p>
  </li>
  <li>
    <p>push</p>

    <pre><code> rake deploy
</code></pre>

    <p>部署完如果你觉得可以的话就可以push到server上了</p>

    <p>如果你想把文件放到Github上可以这样:</p>

    <pre><code> git add .
 git commit -m "备注内容"
 git push origin source
</code></pre>
  </li>
</ol>

<h4 id="codeblock">CodeBlock使用方法</h4>

<pre><code>{ % codeblock test lang:objc % }
NSString *str = [[NSString alloc] init];
NSArray *arr = @[@"哈哈", str];
{ % endcodeblock % }
//书写时请去掉{和%之间的空格
</code></pre>

<p>或者简写成:</p>

<pre><code>``` objc

NSString *str = [[NSString alloc] init];

```
</code></pre>

<p>效果:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="bp">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>更多细节请参考:</p>

<p><a href="http://shengmingzhiqing.com/blog/octopress-tutorials-toc.html/">《生命之氢:Octopress 教程目录》</a></p>

<p><a href="http://beyondvincent.com/blog/2013/08/03/108-creating-a-github-blog-using-octopress/">《破船之家:利用Octopress搭建一个Github博客》</a></p>

<p><a href="http://beyondvincent.com/blog/2013/07/27/107-hello-page-of-github/">《破船之家:你好！github页面》</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Blog]]></title>
    <link href="http://syljay0508.github.io/aaron/blog/new-post/"/>
    <updated>2014-11-02T03:15:25+08:00</updated>
    <id>http://syljay0508.github.io/aaron/blog/new-post</id>
    <content type="html"><![CDATA[<p>博客搬家了, 投入<code>Octopress</code>的怀抱了. 可以尽情的写作了. PS:构建难度还是不小的</p>
]]></content>
  </entry>
  
</feed>
